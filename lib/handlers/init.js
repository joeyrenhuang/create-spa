// Generated by CoffeeScript 2.6.1
(function() {
  var cfging, clone, create;

  cfging = require('./cfging');

  module.exports = function(tpl, app) {
    if (!tpl) {
      return cfging();
    }
    return create(tpl, app || `${tpl}-app`);
  };

  create = function(tpl, app) {
    var tpls;
    console.log(`Project name: ${app}, base on Template: ${tpl}
Creating...`);
    // use degit or git clone --depth 1
    // use git clone
    tpls = require('./tpls');
    if (tpl in tpls) {
      return clone(tpls[tpl], app);
    } else {
      console.log(`Template ${tpl} not found`);
      return console.log(`Available Templates list: ${Object.keys(tpls)}`);
    }
  };

  clone = function(url, app) {
    var dir, shell;
    shell = require('shelljs');
    if ((url.endsWith('.git')) === false) {
      dir = url.match(/\.git\/(.*)/)[1];
      url = url.match(/(.*\.git)/)[1];
    }
    if ((shell.exec(`git clone --depth=1 ${url} ${app}`)).code === 0) {
      shell.cd(app);
      if (dir) {
        shell.exec(`FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty --subdirectory-filter ${dir} HEAD`);
      }
      shell.rm('-rf', `./.git`);
      // addons: add initial css / jsex
      if ((app.indexOf('src')) === -1) {
        create('jsex', 'src/jsex');
        create('css', 'src/css');
      } else {
        return shell.cd('../..');
      }
      console.log('Initial your app success.');
      return shell.exit(0);
    } else {
      return shell.exit(1);
    }
  };

}).call(this);
